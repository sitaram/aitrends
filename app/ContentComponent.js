import React, { useState, useEffect } from 'react';
import { Paper, Box, useMediaQuery, useTheme } from '@mui/material';
import { ThreeDots } from 'react-loader-spinner';
import CustomMarkdown from './CustomMarkdown';
import YouTubeCarousel from './YouTubeCarousel';
import { useSwipeable } from 'react-swipeable';

const ContentComponent = ({
  topic,
  tabIndex,
  loadingCount,
  isTabBarSticky,
  content,
  handleSwitchTab,
  handleTabChange,
}) => {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));
  const [feedback, setFeedback] = useState(''); // 'Next', 'Previous', or ''

  const handleSwipe = (eventData) => {
    const deltaX = eventData.deltaX;
    const deltaY = eventData.deltaY;
    if (deltaY < 50 && deltaY > -50) {
      if (deltaX > 100) {
        setFeedback('Previous');
        handleSwitchTab('Previous');
      } else if (deltaX < -100) {
        setFeedback('Next');
        handleSwitchTab('Next');
      }
    }
    const timeoutId = setTimeout(() => setFeedback(''), 500);
    return () => clearTimeout(timeoutId); // Cleanup timeout
  };

  const handlers = useSwipeable({
    onSwiped: handleSwipe,
    preventDefaultTouchmoveEvent: true,
    trackMouse: true,
  });

  // console.log(content);

  return (
    <div style={{ paddingBottom: '64px' }}>
      {feedback && (
        <Box
          sx={{
            position: 'absolute',
            top: '50%',
            left: feedback === 'Previous' ? '0' : 'auto',
            right: feedback === 'Next' ? '0' : 'auto',
            transform: 'translateY(-50%)',
            backgroundColor: 'rgba(0,0,0,0.7)',
            color: 'white',
            padding: '8px 16px',
            borderRadius: '4px',
            fontSize: '1rem',
            transition: 'opacity 0.5s ease',
            opacity: feedback ? 1 : 0,
          }}
        >
          {feedback} Tab
        </Box>
      )}
      {loadingCount ? (
        <div className="centered">
          <ThreeDots color="#3a506b" />
        </div>
      ) : (
        <Box
          component="main"
          sx={{
            flexGrow: 1,
            width: '100%',
            marginTop: isTabBarSticky ? '52px' : '0px',
          }}
        >
          {tabIndex === 0 && <YouTubeCarousel query={topic} />}

          {tabIndex !== 0 && (
            <Paper
              sx={{
                padding: '10px 24px',
                marginBottom: '0',
                borderBottom: 0,
                borderColor: 'divider',
                borderRadius: 0,
                marginRight: 0,
              }}
            >
              <div
                style={{
                  color: theme.palette.primary.main,
                  textDecoration: 'underline',
                  cursor: 'pointer',
                  textAlign: 'right',
                  fontWeight: 'bold',
                }}
                onClick={() => {
                  handleTabChange(null, 0);
                }}
              >
                &lt; Back to overview tab
              </div>
            </Paper>
          )}
          <div {...(isMobile ? handlers : {})}>
            {content.map((part, index) => (
              <Paper
                key={index}
                elevation={1}
                sx={{
                  padding: '10px 16px',
                  marginBottom: '0',
                  borderBottom: 0,
                  borderColor: 'divider',
                  borderRadius: 0,
                }}
              >
                <CustomMarkdown text={part} topic={topic} handleTabChange={handleTabChange} />
              </Paper>
            ))}
          </div>
          <div
            style={{
              fontSize: '0.7rem',
              fontStyle: 'italic',
              color: '#686868',
              textAlign: 'center',
              width: '100%',
              padding: '10px',
            }}
          >
            {"The content on this page was generated by OpenAI's AI technology. While we strive for accuracy and " +
              'relevance, OpenAI does not guarantee the correctness or currentness of the AI-generated information. It is ' +
              'intended for informational purposes only and should not be taken as professional advice.'}
          </div>
        </Box>
      )}
    </div>
  );
};

export default ContentComponent;
